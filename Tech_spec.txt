1. Problem definition
From the "business" perspective, what is the point of the application. (students vote on snacks to choose what is the best snack)

2. Product requirements (Requirement gathering)
What are the questions/problems this should solve?
Users vote on items
Need to be able to answer who voted on an item

3. Technology choices
Based on product requirements, what are the technologies/architecture
SPA W/ rest API
Django/Angular/PSQL

4. Data Modeling
List of tables, and schema for the tables

5. Backend Design
What questions does the server need to answer
API Design (based on bucketing questions into broad functionality segments):
	URLs 
		JSON Format ---- GET /items/
							-> {
								'items': [
										{'name': 'Apple', 'id': 1, 'votes': 3},
										{'name': 'Orange', 'id': 2, 'votes': 2}
									]	
								}


						POST /vote/<item_id>
						{
							'user_id': <int>
						}

						GET /vote/user/<user_id>
						{
							'votes': [
								{'item': {'id': 1}},
								{'item': {'id': 2}}
							]
						}


6. Frontend
Ideally you would have a mockup (balsamiq)
Bucket into functionality -> components